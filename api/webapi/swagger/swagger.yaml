consumes:
- application/json
- application/xml
- application/gob
- application/x-gob
definitions:
  LoginAuthPayload:
    example:
      email: sample@goa-sample.test.com
      password: test1234
    properties:
      email:
        description: メール
        example: sample@goa-sample.test.com
        type: string
      password:
        description: パスワード
        example: test1234
        type: string
    required:
    - email
    - password
    title: LoginAuthPayload
    type: object
  SignUpUsersPayload:
    example:
      email: sample@goa-sample.test.com
      name: 田中　太郎
      password: test1234
    properties:
      email:
        description: メール
        example: sample@goa-sample.test.com
        type: string
      name:
        description: 名前
        example: 田中　太郎
        type: string
      password:
        description: パスワード
        example: test1234
        type: string
    required:
    - name
    - email
    - password
    title: SignUpUsersPayload
    type: object
  Token:
    description: token (default view)
    example:
      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      user:
        created_at: "2019-01-31T00:00:00+09:00"
        email: test@exmaple.com
        id: 1
        name: 佐藤　太郎
        password: pas
    properties:
      token:
        description: token value
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        type: string
      user:
        $ref: '#/definitions/User'
    required:
    - token
    - user
    title: 'Mediatype identifier: application/vnd.token+json; view=default'
    type: object
  User:
    description: user (default view)
    example:
      created_at: "2019-01-31T00:00:00+09:00"
      email: test@exmaple.com
      id: 1
      name: 佐藤　太郎
      password: pas
    properties:
      created_at:
        description: 作成日
        example: "2019-01-31T00:00:00+09:00"
        format: date-time
        type: string
      email:
        description: メール
        example: test@exmaple.com
        type: string
      id:
        description: ID
        example: 1
        format: int64
        type: integer
      name:
        description: 名前
        example: 佐藤　太郎
        type: string
      password:
        description: パスワード
        example: pas
        type: string
    required:
    - id
    title: 'Mediatype identifier: application/vnd.user+json; view=default'
    type: object
host: localhost:3000
info:
  description: A teaser for goa
  title: The docker_goa API
  version: ""
paths:
  /add/{left}/{right}:
    get:
      description: add returns the sum of the left and right parameters in the response
        body
      operationId: operands#add
      parameters:
      - description: Left operand
        in: path
        name: left
        required: true
        type: integer
      - description: Right operand
        in: path
        name: right
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      schemes:
      - http
      summary: add operands
      tags:
      - operands
  /current_user:
    get:
      description: |-
        ログインしているユーザーの情報を取得する

        Required security scopes:
          * `api:access`
      operationId: users#get_current_user
      produces:
      - application/vnd.user+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: get_current_user users
      tags:
      - users
  /login:
    post:
      description: jwtでのログイン処理
      operationId: auth#login
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/LoginAuthPayload'
      produces:
      - application/vnd.token+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      schemes:
      - http
      summary: login auth
      tags:
      - auth
  /sign_up:
    post:
      description: |-
        サインアップ

        Required security scopes:
          * `api:access`
      operationId: users#sign_up
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SignUpUsersPayload'
      produces:
      - application/vnd.token+json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Token'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      schemes:
      - http
      security:
      - jwt:
        - api:access
      summary: sign_up users
      tags:
      - users
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  BadRequest:
    description: Bad Request
  InternalServerError:
    description: Internal Server Error
  NotFound:
    description: Not Found
schemes:
- http
securityDefinitions:
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

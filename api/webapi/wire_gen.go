// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/kod-source/docker-goa-next/app/datastore"
	"github.com/kod-source/docker-goa-next/app/external"
	"github.com/kod-source/docker-goa-next/app/interactor"
	"github.com/kod-source/docker-goa-next/app/repository"
	"github.com/kod-source/docker-goa-next/app/schema"
)

// Injectors from wire.go:

func NewApp(ctx context.Context) (*App, error) {
	service := newService()
	db, err := schema.NewDB()
	if err != nil {
		return nil, err
	}
	timeRepository := repository.NewTimeRepositoy()
	userDatastore := datastore.NewUserDatastore(db, timeRepository)
	jwtExternal := external.NewJWTExternal(timeRepository)
	userInteractor := interactor.NewUserInteractor(userDatastore, jwtExternal)
	usersController := NewUsersController(service, userInteractor)
	postDatastore := datastore.NewPostDatastore(db, timeRepository)
	postInteractor := interactor.NewPostInteractor(postDatastore)
	postsController := NewPostsController(service, postInteractor)
	operandsController := NewOperandsController(service)
	likeDatastore := datastore.NewLikeDatastore(db)
	likeInteractor := interactor.NewLikeInteractor(likeDatastore)
	likesController := NewLikesController(service, likeInteractor)
	commentDatastore := datastore.NewCommentDatastore(db, timeRepository)
	commentInteractor := interactor.NewCommentInteractor(commentDatastore)
	commentsController := NewCommentsController(service, commentInteractor)
	authController := NewAuthController(service, userInteractor)
	app, err := newApp(ctx, service, usersController, postsController, operandsController, likesController, commentsController, authController)
	if err != nil {
		return nil, err
	}
	return app, nil
}

import {
    Grid,
    Typography,
    Box,
    Paper,
    Link,
    TextField,
    CssBaseline,
    Button,
    IconButton,
} from "@mui/material";
import Avatar from "@mui/material/Avatar";
import { createTheme, ThemeProvider } from "@mui/material/styles";
import { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { FormEvent, useContext, useState } from "react";

import { isAxiosError, MyAxiosError } from "../lib/axios";
import { AuthRepository } from "../lib/repository/auth";
import { AppContext } from "./_app";

function Copyright(props: any) {
    return (
        <Typography variant='body2' color='text.secondary' align='center' {...props}>
            {"Copyright © "}
            <Link color='inherit' href='https://mui.com/'>
                Your Website
            </Link>{" "}
            {new Date().getFullYear()}
            {"."}
        </Typography>
    );
}

const SignUp: NextPage = () => {
    const { setUser } = useContext(AppContext);
    const theme = createTheme();
    const router = useRouter();
    const [name, setName] = useState("");
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [avatarPath, setAvatarPath] = useState("");

    const onSubmit = async (e: FormEvent<HTMLFormElement>) => {
        e.preventDefault();
        try {
            const auth = await AuthRepository.signUp(name, email, password, avatarPath);
            localStorage.setItem("token", auth.token);
            setUser(auth.user);
            router.push("/");
        } catch (e) {
            if (isAxiosError(e)) {
                const myAxiosError = e.response?.data as MyAxiosError;
                if (!myAxiosError.message) {
                    return alert(e.message);
                }
                return alert(myAxiosError.message);
            }
        }
    };

    const onChangeInputFile = (e: React.ChangeEvent<HTMLInputElement>) => {
        if (e.target.files && e.target.files[0]) {
            const file = e.target.files[0];
            const reader = new FileReader();
            reader.onload = (e: ProgressEvent<FileReader>) => {
                if (!e.target) return null;
                setAvatarPath(e.target.result as string);
            };
            reader.readAsDataURL(file);
        }
    };

    return (
        <div>
            <Head>
                <title>アカウント作成</title>
                <meta name='description' content='Generated by create next app' />
                <link rel='icon' href='/favicon.ico' />
            </Head>

            <ThemeProvider theme={theme}>
                <Grid container component='main' sx={{ height: "100vh" }}>
                    <CssBaseline />
                    <Grid
                        item
                        xs={false}
                        sm={4}
                        md={7}
                        sx={{
                            backgroundImage: "url(https://source.unsplash.com/random)",
                            backgroundRepeat: "no-repeat",
                            backgroundColor: (t) =>
                                t.palette.mode === "light"
                                    ? t.palette.grey[50]
                                    : t.palette.grey[900],
                            backgroundSize: "cover",
                            backgroundPosition: "center",
                        }}
                    />
                    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>
                        <Box
                            sx={{
                                my: 8,
                                mx: 4,
                                display: "flex",
                                flexDirection: "column",
                                alignItems: "center",
                            }}
                        >
                            <Typography component='h1' variant='h5'>
                                Sign Up
                            </Typography>
                            <form onSubmit={onSubmit}>
                                <Box textAlign='center'>
                                    <IconButton>
                                        <label className='cursor-pointer'>
                                            <Avatar
                                                sx={{ width: 100, height: 100 }}
                                                alt='My Profile Image'
                                                src={avatarPath ? avatarPath : "/avatar.png"}
                                            />
                                            <input
                                                type='file'
                                                className='hidden'
                                                accept='image/*'
                                                onChange={onChangeInputFile}
                                            />
                                        </label>
                                    </IconButton>
                                </Box>
                                <TextField
                                    margin='normal'
                                    required
                                    fullWidth
                                    label='氏名'
                                    name='name'
                                    autoComplete='name'
                                    autoFocus
                                    value={name}
                                    onChange={(e) => setName(e.target.value)}
                                />
                                <TextField
                                    margin='normal'
                                    required
                                    fullWidth
                                    label='Email Address'
                                    name='email'
                                    autoComplete='email'
                                    value={email}
                                    onChange={(e) => setEmail(e.target.value)}
                                />
                                <TextField
                                    margin='normal'
                                    required
                                    fullWidth
                                    name='password'
                                    label='Password'
                                    type='password'
                                    autoComplete='current-password'
                                    value={password}
                                    onChange={(e) => setPassword(e.target.value)}
                                />
                                <Button
                                    type='submit'
                                    fullWidth
                                    variant='contained'
                                    className='bg-blue-400'
                                    sx={{ mt: 3, mb: 2 }}
                                >
                                    Sign Up
                                </Button>
                                <Button onClick={() => router.push("/login")}>
                                    ログインに戻る
                                </Button>
                                <Copyright sx={{ mt: 5 }} />
                            </form>
                        </Box>
                    </Grid>
                </Grid>
            </ThemeProvider>
        </div>
    );
};

export default SignUp;

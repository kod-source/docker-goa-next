import { NextPage } from "next";
import Head from "next/head";
import { useState, useEffect, useContext, useCallback } from "react";
import { isAxiosError } from "axios";
import ArrowBackIcon from "@mui/icons-material/ArrowBack";
import { useRouter } from "next/router";
import { RoomRepository } from "lib/repository/room";
import { IndexRoom } from "lib/model/room";
import { AppContext } from "pages/_app";
import { Loading } from "lib/components/loading";

const Message: NextPage = () => {
  const router = useRouter();
  const { user } = useContext(AppContext);
  const [indexRooms, setIndexRooms] = useState<IndexRoom[] | []>([]);
  const [nextID, setNextID] = useState<number | null>(0);
  const [againFetch, setAgainFetch] = useState(true);

  const fetchRoomDate = async () => {
    try {
      if (nextID == null) {
        return;
      }
      const allRooms = await RoomRepository.index(nextID);
      setIndexRooms((old) => {
        if (nextID == 0) {
          return allRooms.indexRooms;
        }
        return [...old, ...allRooms.indexRooms];
      });
      setNextID(allRooms.nextID);
    } catch (e) {
      if (isAxiosError(e)) {
        const myAxiosError = e.response;
        if (myAxiosError?.status === 404) {
          setIndexRooms([]);
          return;
        }
        return alert(myAxiosError?.statusText);
      }
    }
  };

  useEffect(() => {
    if (againFetch) {
      fetchRoomDate();
    }
    window.addEventListener("scroll", changeBottom);
    return () => window.removeEventListener("scroll", changeBottom);
  }, [againFetch]);

  const changeBottom = useCallback(() => {
    const bottomPosition = document.body.offsetHeight - (window.scrollY + window.innerHeight);
    if (bottomPosition < 0) {
      setAgainFetch(true);
      return;
    }
    setAgainFetch(false);
  }, []);

  if (!user) return <Loading />;
  return (
    <>
      <Head>
        <title>Message</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div className='mx-auto w-3/5 '>
        <div className='my-5 flex'>
          <ArrowBackIcon
            className='mr-5 cursor-pointer hover:opacity-60'
            onClick={() => router.push("/")}
          />
          <h2>ホーム</h2>
        </div>
        <h1 className='text-2xl font-bold'>メッセージ</h1>
        <div>
          {indexRooms.map((ir) => (
            <div
              key={ir.room.id}
              className='w-1/2 h-10 my-3 hover:opacity-60 cursor-pointer'
              onClick={() => router.push(`/message/${ir.room.id}`)}
            >
              {/* <div>画像の表示</div> */}
              <p>
                {ir.room.isGroup
                  ? `${ir.room.name}(${ir.countUser})`
                  : ir.room.name.split("/").map((name) => {
                      if (name !== user.name) return name;
                    })}
              </p>
              <p>{ir.lastText}</p>
            </div>
          ))}
        </div>
      </div>
    </>
  );
};

export default Message;
